kind: secret
name: id_ed25519
get:
  path: kv/data/ssh
  name: id_ed25519

---

kind: secret
name: tg_token
get:
  path: kv/data/telegram
  name: token

---

kind: secret
name: tg_target
get:
  path: kv/data/telegram
  name: target

---

kind: pipeline
type: docker
name: default

steps:
  - name: nix generate config
    image: nixpkgs/nix-flakes
    environment:
      SSH_KEY:
        from_secret: id_ed25519
    commands:
      - mkdir -p $HOME/.ssh
      - echo "$SSH_KEY" > $HOME/.ssh/id_ed25519
      - echo "StrictHostKeyChecking no" > $HOME/.ssh/config
      - chmod -R 400 $HOME/.ssh
      - nix run ".#dnscontrol" -- push

  - name: deploy
    image: alpine:edge
    commands:
      # Run deploy
      - apk add --no-cache rsync
      - mkdir -p /sync/ltnet-zones
      - rsync -ar --delete-after zones/ /sync/ltnet-zones/
    volumes:
      - name: sync
        path: /sync
    when:
      status:
        - success

  - name: deploy (no delete, for failure)
    image: alpine:edge
    commands:
      # Run deploy
      - apk add --no-cache rsync
      - mkdir -p /sync/ltnet-zones
      - rsync -ar zones/ /sync/ltnet-zones/
    volumes:
      - name: sync
        path: /sync
    when:
      status:
        - failure

  - name: send telegram notification
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_target
    when:
      status:
        - success
        - failure

volumes:
  - name: sync
    host:
      path: /sync
