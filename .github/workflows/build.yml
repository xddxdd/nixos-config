name: 'Build and populate cache'
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
jobs:
  build-packages:
    strategy:
      fail-fast: false
      matrix:
        base-image:
          - ubuntu-24.04
        nixos-configuration:
          - alice
          - azure-vm1
          - azure-vm2
          - buyvm
          - bwg-lax
          - lt-dell-wyse
          - lt-dell-wyse-thin
          - lt-home-builder
          - lt-home-lte
          - lt-home-test
          - lt-home-vm
          - lt-hp-omen
          - oracle-vm1
          - oracle-vm2
          - pve-c3758
          - pve-epyc
          - pve-hp-z220-sff
          - terrahost
          - v-ps-hkg
          - v-ps-sea
          - virmach-ny1g
          - virmach-ny6g
        include:
          - base-image: ubuntu-24.04-arm
            nixos-configuration: hetzner-de
          - base-image: ubuntu-24.04-arm
            nixos-configuration: lt-rpi4

    runs-on: ${{ matrix.base-image }}
    env:
      GIT_SSL_NO_VERIFY: 'true'
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          swap-size-mb: 4096
          build-mount-path: '/nix'
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTOMERGE_TOKEN }}

      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.AUTOMERGE_TOKEN }}
          extra_nix_config: |
            experimental-features = nix-command flakes ca-derivations
            extra-experimental-features = nix-command flakes ca-derivations
            keep-going = true
            log-lines = 25
            substituters = https://nix-community.cachix.org https://cache.garnix.io https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g=
            trusted-substituters = https://nix-community.cachix.org https://cache.garnix.io https://cache.nixos.org/

      - name: Setup Attic cache
        uses: ryanccn/attic-action@v0
        continue-on-error: true
        with:
          endpoint: https://attic.hetzner-de.xuyh0120.win
          cache: lantian
          token: ${{ secrets.ATTIC_TOKEN }}

      - name: Set nix daemon tmpdir path
        run: |
          sudo mkdir -p /nix/tmpdir
          sudo chown "$(whoami)" /nix/tmpdir

          cat > override.conf <<EOF
          [Service]
          Environment="TMPDIR=/nix/tmpdir"
          EOF
          sudo mkdir /etc/systemd/system/nix-daemon.service.d/
          sudo mv override.conf /etc/systemd/system/nix-daemon.service.d/override.conf
          sudo systemctl daemon-reload
          sudo systemctl restart nix-daemon

      - name: Build nix packages
        run: |
          env TMPDIR=/nix/tmpdir nix build .#nixosConfigurations.${{ matrix.nixos-configuration }}.config.system.build.toplevel
