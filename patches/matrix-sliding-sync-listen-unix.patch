diff --git a/v3.go b/v3.go
index 6333b81..42914be 100644
--- a/v3.go
+++ b/v3.go
@@ -219,6 +219,20 @@ func RunSyncV3Server(h http.Handler, bindAddr, destV2Server, tlsCert, tlsKey str
 
 	// Block forever
 	var err error
+
+	var l net.Listener
+	unixSocketPath := os.Getenv("SYNCV3_UNIX_SOCKET")
+	if unixSocketPath != "" {
+		l, err = net.Listen("unix", unixSocketPath)
+	} else {
+		l, err = net.Listen("tcp", bindAddr)
+	}
+	if err != nil {
+		sentry.CaptureException(err)
+		// TODO: Fatal() calls os.Exit. Will that give time for sentry.Flush() to run?
+		logger.Fatal().Err(err).Msg("failed to listen")
+	}
+
 	if internal.IsUnixSocket(bindAddr) {
 		logger.Info().Msgf("listening on unix socket %s", bindAddr)
 		listener := unixSocketListener(bindAddr)
@@ -226,10 +240,10 @@ func RunSyncV3Server(h http.Handler, bindAddr, destV2Server, tlsCert, tlsKey str
 	} else {
 		if tlsCert != "" && tlsKey != "" {
 			logger.Info().Msgf("listening TLS on %s", bindAddr)
-			err = http.ListenAndServeTLS(bindAddr, tlsCert, tlsKey, srv)
+			err = http.ServeTLS(l, srv, tlsCert, tlsKey)
 		} else {
 			logger.Info().Msgf("listening on %s", bindAddr)
-			err = http.ListenAndServe(bindAddr, srv)
+			err = http.Serve(l, srv)
 		}
 	}
 	if err != nil {
