diff --git a/main.go b/main.go
index da280ff..66a46ae 100644
--- a/main.go
+++ b/main.go
@@ -6,14 +6,15 @@ package main
 
 import (
 	"context"
+	"net"
 	"net/http"
 	"time"
 
 	"github.com/drone/drone-go/plugin/secret"
 	"github.com/drone/drone-vault/plugin"
 	"github.com/drone/drone-vault/plugin/token"
-	"github.com/drone/drone-vault/plugin/token/kubernetes"
 	"github.com/drone/drone-vault/plugin/token/approle"
+	"github.com/drone/drone-vault/plugin/token/kubernetes"
 
 	"github.com/hashicorp/vault/api"
 	"github.com/kelseyhightower/envconfig"
@@ -38,6 +39,7 @@ var envs = []string{
 
 type config struct {
 	Address            string        `envconfig:"DRONE_BIND"`
+	UnixSocket         string        `envconfig:"DRONE_UNIX_SOCKET"`
 	Debug              bool          `envconfig:"DRONE_DEBUG"`
 	Secret             string        `envconfig:"DRONE_SECRET"`
 	VaultAddr          string        `envconfig:"VAULT_ADDR"`
@@ -132,10 +134,21 @@ func main() {
 		})
 	}
 
-	g.Go(func() error {
-		logrus.Infof("server listening on address %s", spec.Address)
-		return http.ListenAndServe(spec.Address, nil)
-	})
+	if spec.UnixSocket != "" {
+		g.Go(func() error {
+			l, err := net.Listen("unix", spec.UnixSocket)
+			if err != nil {
+				return err
+			}
+			logrus.Infof("server listening on socket %s", spec.UnixSocket)
+			return http.Serve(l, nil)
+		})
+	} else {
+		g.Go(func() error {
+			logrus.Infof("server listening on address %s", spec.Address)
+			return http.ListenAndServe(spec.Address, nil)
+		})
+	}
 
 	if err := g.Wait(); err != nil {
 		logrus.Fatal(err)
